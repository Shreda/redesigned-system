# import Post, Medication, Schedule, MedicationSubscriptionPayload from "./generated/prisma.graphql"

type Query {
  feed: [Post!]!
  drafts: [Post!]!
  post(id: ID!): Post
  me: User
  medications: [Medication!]!
  schedules: [Schedule!]!
  userSchedules(id:ID!): [Schedule!]!
}

input MedicationIdInput {
  id: ID!
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createDraft(title: String!, text: String!): Post!
  publish(id: ID!): Post!
  deletePost(id: ID!): Post!
  createMedication(name: String!, count: Int!, dispenser: Int, dose: Int!): Medication!
  updateMedication(id: ID!, name: String, count: Int, dispenser: Int, dose: Int): Medication!
  updatePatientMedication(id: ID!, name: String, count: Int, dose: Int, dispenser: Int patientId:ID!): Medication!
  deleteMedication(id: ID!): Medication!
  createSchedule(time: Int!, medications:[MedicationIdInput], takenTime: DateTime): Schedule!
  updateSchedule(id: ID!, time: Int, medications:[MedicationIdInput], takenTime:DateTime): Schedule!
  updatePatientSchedule(id: ID!, time: Int, takenTime:DateTime, patientId:ID!): Schedule!
  deleteSchedule(id: ID!): Schedule!
}

type Subscription {
  feedSubscription: PostSubscriptionPayload!
  medicationUpdated: MedicationSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}
